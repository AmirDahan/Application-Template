<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Titlebar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        g/7PWbToV6/+cfpcIFL/AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="label8.Text" xml:space="preserve">
    <value>How to get started :
1 : Pick a color from the colors above
2 : Set that color as a background color to a Panel/Labe//Button (in the designer)
3 : The app will automatically set its theme accordingly if Theme.Set(this); is present
4 : Labels will automatically be white or dark if they are initially set to white

How to manually set something's Color :
1 : Pick a color from the colors above (Example Accent)
2 : panel1.backcolor = Theme.Accent;</value>
  </data>
</root>