<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Titlebar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>